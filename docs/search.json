[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IPGTT Data Cleaning and Analysis",
    "section": "",
    "text": "Data Dictionary\n\n\n\n\n\n\n\n\n\nName\nData Type\nDescription\nUnit of Measurement\n\n\n\n\nmouse_id\nchr\nUnique identifier for each mouse\nNA\n\n\nmouse\nchr\nIdentifier or name assigned to each mouse\nNA\n\n\ngenotype\nfactor\nGenetic constitution of each mouse (e.g., WT, Het, KO)\nNA\n\n\nsex\nfactor\nSex of the mouse (e.g., Male, Female)\nNA\n\n\ntest_week\nnum\nWeek number when the test was conducted\nweeks\n\n\ntime_point\nnum\nSpecific time point at which data was collected\nmin\n\n\nbody_weight\nnum\nBody weight of the mouse\ng\n\n\nglucose reading\nnum\nBlood glucose level of the mouse\nmg/dL\n\n\n\n\n\nCleaning\n\nFiltering Unnecessary Data:\n\n# Reading excel database\nIPGTT_tidy_data_corrected &lt;- read_excel(\"IPGTT_tidy_data_corrected.xlsx\")\nsummary(IPGTT_tidy_data_corrected)\n\n    Mouse                 BW          Test Week        Genotype        \n Length:2424        Min.   :16.60   Min.   : 1.000   Length:2424       \n Class :character   1st Qu.:20.07   1st Qu.: 3.000   Class :character  \n Mode  :character   Median :22.55   Median : 6.000   Mode  :character  \n                    Mean   :22.24   Mean   : 6.378                     \n                    3rd Qu.:24.50   3rd Qu.: 9.000                     \n                    Max.   :26.20   Max.   :12.000                     \n                    NA's   :1800    NA's   :456                        \n     Sex             Time Point        Glucose Reading\n Length:2424        Length:2424        Min.   :  5.0  \n Class :character   Class :character   1st Qu.: 68.0  \n Mode  :character   Mode  :character   Median :118.0  \n                                       Mean   :168.5  \n                                       3rd Qu.:172.0  \n                                       Max.   :750.0  \n                                       NA's   :1959   \n\n\n\n# Removing Mouse and nan data values that were created during ChatGPT analysis\nIPGTT_data &lt;- IPGTT_tidy_data_corrected %&gt;% filter(Mouse != \"Mouse\")\nIPGTT_data &lt;- IPGTT_data %&gt;% filter(Mouse != \"nan\")\n\n# Removing all rows where there are no body weight AND glucose readings\nIPGTT_data &lt;- IPGTT_data %&gt;% filter(!(is.na(BW) & is.na(`Glucose Reading`)))\n\n\n\nChanging variable names according to Tidy Data guidelines\n\nold_names &lt;- names(IPGTT_data)\n\nnew_names &lt;- c(\"mouse\", \"body_weight\", \"test_week\", \"genotype\", \"sex\", \"time_point\", \"glucose_reading\")\nnames(IPGTT_data) &lt;- new_names\n\n\n\nCreating unique mouse ID’s depending on its name and genotype\n\nIPGTT_data &lt;- IPGTT_data %&gt;% mutate(mouse_id = paste(mouse, genotype, sep = \"-\"))\n\n\n\nConverting time_point from char to numeric\n\nIPGTT_data &lt;- IPGTT_data %&gt;% mutate(time_point = as.numeric(str_extract(time_point, \"\\\\d+\")))\n\n\n\nFactors\n\nIPGTT_data$sex &lt;-  factor(IPGTT_data$sex)\nIPGTT_data$genotype &lt;- factor(IPGTT_data$genotype, order = TRUE,levels = c(\"WT-WT\", \"Het-NOD\", \"KO-NOD\"))\n\n\n\n# Checking to see if data type changed\nstr(IPGTT_data)\n\ntibble [624 × 8] (S3: tbl_df/tbl/data.frame)\n $ mouse          : chr [1:624] \"LP\" \"LP\" \"LP\" \"LP\" ...\n $ body_weight    : num [1:624] 21.5 23.8 24.6 22.8 25.4 24.8 25.3 25.5 25 25.8 ...\n $ test_week      : num [1:624] 1 2 3 4 5 6 7 8 9 10 ...\n $ genotype       : Ord.factor w/ 3 levels \"WT-WT\"&lt;\"Het-NOD\"&lt;..: 3 3 3 3 3 3 3 3 3 3 ...\n $ sex            : Factor w/ 1 level \"F\": 1 1 1 1 1 1 1 1 1 1 ...\n $ time_point     : num [1:624] 0 0 0 0 0 0 0 0 0 0 ...\n $ glucose_reading: num [1:624] 114 114 133 96 158 155 155 161 137 252 ...\n $ mouse_id       : chr [1:624] \"LP-KO-NOD\" \"LP-KO-NOD\" \"LP-KO-NOD\" \"LP-KO-NOD\" ...\n\n\n\n\nRelocating columns for easier readability\n\nIPGTT_data &lt;- IPGTT_data %&gt;%\n  select(mouse_id, mouse, genotype, sex, test_week, time_point, body_weight, glucose_reading, everything())\n\n\n\n\n\n\nVisualizations\n\n# Calculate average body weight and glucose reading by test_week and genotype\nmean_data &lt;- IPGTT_data %&gt;%\n  group_by(test_week, genotype) %&gt;%\n  summarise(mean_body_weight = mean(body_weight, na.rm = TRUE))\n\nplot2 &lt;-ggplot(mean_data, aes(x = test_week, y = mean_body_weight, color = genotype)) +\n  geom_point() +\n  geom_line(aes(x = test_week, y = mean_body_weight, color = genotype, group = genotype)) +\n  geom_line(data = IPGTT_data, aes(x = test_week, y = body_weight, color = genotype, group = mouse_id), alpha = 0.5)+\n  theme_minimal()+ scale_color_manual(values = color_palette) +\n  labs(title = \"Mean body weight over test weeks\", x=\"Test Week\", y = \"Body Weight (g)\",    subtitle = \"(All 12 weeks of data)\")+\n  theme(legend.position = \"bottom\")+\n  scale_x_continuous(breaks=seq(0,12, by=1)) \n\n  \n  plotly_plot2 &lt;- ggplotly(plot2, tooltip = c( \"mouse_id\", \"test_week\", \"body_weight\", \"mean_body_weight\")) %&gt;%\n  config(displayModeBar = FALSE) %&gt;% \n  layout(legend = list(orientation = \"h\", x = 0.5, xanchor = \"center\", y = -0.2))\n\nplotly_plot2\n\n\n\n\n\n\n\n\n#IPGTT trajectories overlaid with within-genotype medians\n\nIPGTT_fil &lt;- IPGTT_data %&gt;% filter(!is.na(glucose_reading), test_week %in% 1:4)\n\nmedian_data &lt;- IPGTT_data %&gt;% filter(!is.na(glucose_reading), test_week %in% 1:4)  %&gt;% \n  group_by(time_point, genotype, test_week) %&gt;%\n  summarise(median_glucose_reading = median(glucose_reading, na.rm = TRUE))\n\nplot1 &lt;- ggplot(IPGTT_fil, aes(time_point, glucose_reading, color = genotype, group = mouse_id)) +\n  geom_line(alpha = 0.3) +\n  geom_line(data = median_data, aes(x = time_point, y = median_glucose_reading, color = genotype, group = genotype)) + \n  facet_wrap(~ test_week,  ncol = 4) +\n  theme_minimal() +\n  scale_x_continuous(breaks=seq(0,120, by=30)) +\n  scale_color_manual(values = color_palette) +\n  labs(title = \"IPGTT trajectories overlaid with within-genotype medians\", x=\"Test time (min)\", y = \"Blood glucose (mg/dL)\",    subtitle = \"(First four weeks of data)\") +\n  theme(legend.position = \"bottom\", axis.text.x = element_text(angle = 90))\n\nplotly_plot1 &lt;- ggplotly(plot1, tooltip = c( \"mouse_id\", \"time_point\", \"glucose_reading\", \"median_glucose_reading\")) %&gt;%\n  config(displayModeBar = FALSE) %&gt;%\n  layout(legend = list(orientation = \"h\", x = 0.5, xanchor = \"center\", y = -0.2))\n\nplotly_plot1\n\n\n\n\n\n\n\n\n# Example usage\nweeks_list &lt;- list(1:4, 5:8, 9:12)\ngenotypes &lt;- c(\"Het-NOD\", \"KO-NOD\", \"WT-WT\")\n\n\n# Helper function to filter data for given weeks and genotypes\nfilter_data &lt;- function(data, weeks, genotypes) {\n  data %&gt;%\n    filter(!is.na(glucose_reading), \n           test_week %in% weeks, \n           genotype %in% genotypes)\n}\n\n# Helper function to calculate medians for the filtered data\ncalculate_medians &lt;- function(data) {\n  data %&gt;%\n    group_by(time_point, genotype, test_week) %&gt;%\n    summarise(median_glucose_reading = median(glucose_reading, na.rm = TRUE), .groups = 'drop')\n}\n\n# Helper function to generate the plot\ngenerate_plot &lt;- function(data, medians, weeks, genotypes, color_palette) {\n  \n  \n  colored_title &lt;- paste(\n    \"&lt;b&gt;IPGTT trajectories for&lt;/b&gt; \",\n    paste(\n      sprintf(\"&lt;b&gt;&lt;span style='color:%s;'&gt;%s&lt;/span&gt;&lt;/b&gt;\", color_palette[genotypes], genotypes),\n      collapse = \" & \"\n    ),\n    \"&lt;b&gt;overlaid with within-genotype medians during weeks&lt;/b&gt;\",\n     paste(\"&lt;b&gt;\",weeks[1], \"-\",weeks[4], \"&lt;/b&gt;\")\n  )\n  \n  \n  plot &lt;- ggplot(data, aes(time_point, glucose_reading, color = genotype, group = mouse_id)) +\n    geom_line(alpha = 0.3) +\n    geom_line(data = medians, aes(x = time_point, y = median_glucose_reading, color = genotype, group = genotype)) + \n    facet_wrap(~ test_week, ncol = length(weeks)) +\n    theme_minimal() +\n    scale_x_continuous(breaks = seq(0, 120, by = 30)) +\n    scale_color_manual(values = color_palette) +\n     labs(\n      title = \"Placeholder\",  # Title will be overridden by plotly layout\n      x = \"Test time (min)\", \n      y = \"Blood glucose (mg/dL)\"\n    ) +\n    theme(text = element_text(family = \"Source\"), legend.position = \"none\", axis.text.x = element_text(angle = 90))\n\n ggplotly(plot, tooltip = c(\"mouse_id\", \"time_point\", \"glucose_reading\", \"median_glucose_reading\")) %&gt;%\n    config(displayModeBar = FALSE) %&gt;%\n    layout(title = list(text = colored_title, font = list(size = 15), x = 0), \n           legend = list(orientation = \"h\", x = 0.5, xanchor = \"center\", y = -0.2),\n            plot_bgcolor = \"ivory\",  # Set the plot background color in plotly\n            paper_bgcolor = \"ivory\"  # Set the paper background color in plotly\n           )\n  \n}\n\n# Main function to iterate over weeks and genotypes using purrr\ncreate_plots &lt;- function(data, week_combinations, genotypes, color_palette) {\n  genotype_combinations &lt;- combn(genotypes, 2, simplify = FALSE)\n  \n  cross2(week_combinations, genotype_combinations) %&gt;%\n    map(~{\n      weeks &lt;- .x[[1]]\n      genotype_pair &lt;- .x[[2]]\n      \n      filtered_data &lt;- filter_data(data, weeks, genotype_pair)\n      median_data &lt;- calculate_medians(filtered_data)\n      \n      generate_plot(filtered_data, median_data, weeks, genotype_pair, color_palette)\n    \n      \n    })\n}\n\nplots &lt;- create_plots(IPGTT_data, weeks_list, genotypes, color_palette)\n\n\n#walk(plots, print)\n\nfor(plot in plots){\n  print(plot)\n}\n\n\nipgtt_week_1 &lt;- IPGTT_data %&gt;% filter(test_week == 1)\n\n\nggplot(ipgtt_week_1, aes(time_point, glucose_reading, color = genotype))+\n  geom_point(alpha = 0.1)+\n  geom_smooth(method = \"lm\", se= FALSE) +\n  facet_wrap(~genotype) +\n  scale_color_manual(values = color_palette)\n\n\n\n\n\n\n\nipgtt_week_1_lm &lt;- IPGTT_data %&gt;% filter(test_week == 1) %&gt;% \n  group_by(time_point, genotype, mouse_id) %&gt;%  lm(glucose_reading ~ time_point + genotype + 0, data = .)\n\nipgtt_week_1_predicted_lm &lt;- IPGTT_data %&gt;% mutate(glucose_predict_lm = predict(ipgtt_week_1_lm, IPGTT_data))\n\nggplot(ipgtt_week_1_predicted_lm, aes(time_point, glucose_predict_lm, color = genotype)) +\n  geom_line() +\n  geom_point(data = IPGTT_data, aes(time_point, glucose_reading), alpha = 0.08) +\n  theme_minimal() +\n  scale_color_manual(values = color_palette)\n\n\n\n\n\n\n\nbroom::tidy(ipgtt_week_1_lm)\n\n# A tibble: 4 × 5\n  term            estimate std.error statistic  p.value\n  &lt;chr&gt;              &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 time_point        -0.536    0.0678     -7.89 1.74e-12\n2 genotypeWT-WT    215.       6.89       31.2  1.49e-58\n3 genotypeHet-NOD  140.       9.96       14.0  7.54e-27\n4 genotypeKO-NOD   113.       3.79       29.9  1.30e-56\n\nbroom::glance(ipgtt_week_1_lm)\n\n# A tibble: 1 × 12\n  r.squared adj.r.squared sigma statistic  p.value    df logLik   AIC   BIC\n      &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     0.948         0.946  29.1      531. 5.32e-74     4  -578. 1165. 1179.\n# ℹ 3 more variables: deviance &lt;dbl&gt;, df.residual &lt;int&gt;, nobs &lt;int&gt;\n\nsummary(ipgtt_week_1_lm)\n\n\nCall:\nlm(formula = glucose_reading ~ time_point + genotype + 0, data = .)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-61.037 -22.882   0.441  15.796  84.763 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(&gt;|t|)    \ntime_point       -0.53555    0.06784  -7.895 1.74e-12 ***\ngenotypeWT-WT   215.03733    6.89130  31.204  &lt; 2e-16 ***\ngenotypeHet-NOD 139.85162    9.96184  14.039  &lt; 2e-16 ***\ngenotypeKO-NOD  113.23709    3.78801  29.894  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 29.11 on 117 degrees of freedom\n  (47 observations deleted due to missingness)\nMultiple R-squared:  0.9478,    Adjusted R-squared:  0.946 \nF-statistic: 531.3 on 4 and 117 DF,  p-value: &lt; 2.2e-16\n\nIPGTT_data %&gt;% filter(test_week == 1) %&gt;% count(time_point, genotype)\n\n# A tibble: 36 × 3\n   time_point genotype     n\n        &lt;dbl&gt; &lt;ord&gt;    &lt;int&gt;\n 1          0 WT-WT        2\n 2          0 Het-NOD      2\n 3          0 KO-NOD      10\n 4          1 WT-WT        2\n 5          1 Het-NOD      2\n 6          1 KO-NOD      10\n 7          3 WT-WT        2\n 8          3 Het-NOD      2\n 9          3 KO-NOD      10\n10          5 WT-WT        2\n# ℹ 26 more rows\n\nIPGTT_data_clean &lt;- na.omit(IPGTT_data)\n\n\nIPGTT_mixed_model &lt;- lmer(glucose_reading ~ time_point +  test_week + genotype + (1|mouse_id), data = IPGTT_data_clean)\nipgtt_predicted_mm &lt;- IPGTT_data_clean %&gt;%\n  mutate(glucose_predict_mm = predict(IPGTT_mixed_model, data = IPGTT_data_clean))\n\nbroom.mixed::tidy(IPGTT_mixed_model)\n\n# A tibble: 7 × 6\n  effect   group    term            estimate std.error statistic\n  &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;              &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 fixed    &lt;NA&gt;     (Intercept)      110.       30.0       3.68 \n2 fixed    &lt;NA&gt;     time_point        -0.417     0.133    -3.13 \n3 fixed    &lt;NA&gt;     test_week         16.7       2.07      8.07 \n4 fixed    &lt;NA&gt;     genotype.L       -21.0      45.2      -0.465\n5 fixed    &lt;NA&gt;     genotype.Q       -24.3      53.9      -0.451\n6 ran_pars mouse_id sd__(Intercept)   79.6      NA        NA    \n7 ran_pars Residual sd__Observation  115.       NA        NA    \n\nbroom.mixed::glance(IPGTT_mixed_model)\n\n# A tibble: 1 × 7\n   nobs sigma logLik   AIC   BIC REMLcrit df.residual\n  &lt;int&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;       &lt;int&gt;\n1   465  115. -2865. 5743. 5772.    5729.         458\n\nsummary(IPGTT_mixed_model)$df\n\nNULL\n\nggplot(ipgtt_predicted_mm, aes(time_point, glucose_predict_mm, color = genotype, group = mouse_id)) +\n  geom_line()+\n  geom_point(data = IPGTT_data_clean, aes(time_point, glucose_reading), alpha = 0.08) +\n  theme_minimal() +\n  scale_color_manual(values = color_palette)\n\n\n\n\n\n\n\nemm &lt;- emmeans(IPGTT_mixed_model, ~ time_point | test_week | genotype)\n\n# Convert the emmeans results to a data frame for plotting\nemm_df &lt;- as.data.frame(emm)\n\nView(emm_df)\n\n# Plot the estimated marginal means\nggplot(emm_df, aes(x = time_point, y = emmean, color = genotype, group = genotype)) +\n  geom_line() +\n  geom_point() +\n  theme_minimal() +\n  scale_color_manual(values = color_palette) +\n  labs(title = \"Estimated Marginal Means of Glucose Readings\",\n       x = \"Time Point\",\n       y = \"Estimated Marginal Mean Glucose Reading\")\n\n\n\n\n\n\n\n# Calculate contrasts\ncontrast_emm &lt;- contrast(emm, method = \"pairwise\", adjust = \"tukey\")\n\n# Convert contrasts to a data frame for plotting\ncontrast_df &lt;- as.data.frame(contrast_emm)\n\n# Extract the necessary values for the error bars\ncontrast_df &lt;- contrast_df %&gt;%\n  mutate(lower.CL = estimate - SE,\n         upper.CL = estimate + SE)\n\n#ggplot(contrast_df, aes(x = time_point, y = estimate, color = contrast, group = contrast)) +\n#  geom_point() +\n # geom_errorbar(aes(ymin = estimate - SE, ymax = estimate + SE), width = 0.1) +\n # theme_minimal() +\n  #labs(title = \"Contrasts of Estimated Marginal Means\",\n  #     x = \"Time Point\",\n  #     y = \"Contrast Estimate\")\n\n\n# Remove rows with missing values for model fitting\nIPGTT_data_clean &lt;- na.omit(IPGTT_data)\n\n# Step 1: Fit the mixed model on the original data including test_week\nIPGTT_mixed_model &lt;- lmer(glucose_reading ~ time_point + test_week + genotype + (1 | mouse_id), data = IPGTT_data_clean)\n\n# Step 2: Calculate the estimated marginal means for each genotype by test_week\nemm &lt;- emmeans(IPGTT_mixed_model, ~ genotype | test_week | time_point)\n\n# Step 3: Calculate contrasts between genotype pairs for each test week\ncontrast_results &lt;- contrast(emm, interaction = \"pairwise\")\n\n# Convert the contrasts results to a data frame\ncontrast_df &lt;- as.data.frame(contrast_results)\n\n# Print the contrast results to check\nprint(contrast_df)\n\ntest_week = 5.124731, time_point = 35.04086:\n genotype_pairwise     estimate       SE   df t.ratio p.value\n (WT-WT) - (Het-NOD)  -14.94745 81.62075 9.02  -0.183  0.8587\n (WT-WT) - (KO-NOD)    29.74724 63.99061 9.46   0.465  0.6525\n (Het-NOD) - (KO-NOD)  44.69469 64.15469 9.51   0.697  0.5027\n\nDegrees-of-freedom method: kenward-roger \n\nView(contrast_df)\n\n# Step 4: Prepare for plotting the differences between genotype pairs\ncontrast_df &lt;- contrast_df %&gt;%\n  mutate(contrast = rownames(contrast_df)) # Create a new column for contrasts\n\n# Plot the contrasts\nggplot(contrast_df, aes(x = time_point, y = estimate, color = contrast, group = contrast)) +\n  geom_line() +\n  geom_point() +\n  geom_errorbar(aes(ymin = estimate - SE, ymax = estimate + SE), width = 0.1) +\n  theme_minimal() +\n  scale_color_manual(values = color_palette) +\n  labs(title = \"Differences in Estimated Marginal Means Between Genotypes by Test Week\",\n       x = \"Time Point\",\n       y = \"Contrast Estimate\") +\n  facet_wrap(~ test_week)  # Facet by test_week\n\n\n\n\n\n\n\n\n\nlibrary(lme4)\nlibrary(emmeans)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\n\n\nIPGTT_data_clean &lt;- IPGTT_data %&gt;% filter(test_week == 1) %&gt;% na.omit() \n\n\nIPGTT_data_clean$time_point &lt;- as.factor(IPGTT_data_clean$time_point)\nIPGTT_data_clean$test_week &lt;- as.factor(IPGTT_data_clean$test_week)\n\nIPGTT_mixed_model &lt;- lmer(glucose_reading ~ time_point * genotype + (1|mouse_id), data = IPGTT_data_clean)\n\n\nemm &lt;- emmeans(IPGTT_mixed_model, ~  genotype| time_point)\n\nbroom.mixed::tidy(emm) \n\n# A tibble: 36 × 7\n   genotype time_point estimate std.error    df statistic   p.value\n   &lt;chr&gt;    &lt;chr&gt;         &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1 WT-WT    0              171.     19.2   47.4      8.90  1.12e-11\n 2 Het-NOD  0              113.     19.2   47.4      5.92  3.42e- 7\n 3 KO-NOD   0              132.      8.57  47.4     15.4   3.90e-20\n 4 WT-WT    1              182.     19.2   47.4      9.47  1.64e-12\n 5 Het-NOD  1               NA      NA     NA       NA    NA       \n 6 KO-NOD   1              124.      8.93  52.0     13.8   4.76e-19\n 7 WT-WT    3              186.     19.2   47.4      9.71  7.56e-13\n 8 Het-NOD  3               NA      NA     NA       NA    NA       \n 9 KO-NOD   3              127.      9.82  63.5     12.9   2.00e-19\n10 WT-WT    5              223.     19.2   47.4     11.6   1.82e-15\n# ℹ 26 more rows\n\ncontrast_results &lt;- pairs(emm, interaction = \"pairwise\")\n\n\ncontrast_df &lt;- as.data.frame(contrast_results)\n\n\nggplot(contrast_df, aes(x = time_point, y = estimate, color = genotype_pairwise)) +\n  geom_line() +\n  geom_point() +\n  geom_errorbar(aes(ymin = estimate - SE, ymax = estimate + SE), width = 0.1) +\n  theme_minimal() +\n  labs(title = \"Differences in Estimated Marginal Means Between Genotypes (Week 1)\",\n       x = \"Time Point\",\n       y = \"Contrast Estimate\")"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#ipgtt-data-cleaning",
    "href": "index.html#ipgtt-data-cleaning",
    "title": "IPGTT Data Cleaning and Analysis",
    "section": "",
    "text": "Data Dictionary\n\n\n\n\n\n\n\n\n\nName\nData Type\nDescription\nUnit of Measurement\n\n\n\n\nmouse_id\nchr\nUnique identifier for each mouse\nNA\n\n\nmouse\nchr\nIdentifier or name assigned to each mouse\nNA\n\n\ngenotype\nfactor\nGenetic constitution of each mouse (e.g., WT, Het, KO)\nNA\n\n\nsex\nfactor\nSex of the mouse (e.g., Male, Female)\nNA\n\n\ntest_week\nnum\nWeek number when the test was conducted\nweeks\n\n\ntime_point\nnum\nSpecific time point at which data was collected\nmin\n\n\nbody_weight\nnum\nBody weight of the mouse\ng\n\n\nglucose reading\nnum\nBlood glucose level of the mouse\nmg/dL\n\n\n\n\n\n\n# Reading excel database\nIPGTT_tidy_data_corrected &lt;- read_excel(\"C:/Users/dhana/Desktop/ISB/DataFrames/T1D/data/IPGTT_tidy_data_corrected.xlsx\")\nsummary(IPGTT_tidy_data_corrected)\n\n    Mouse                 BW          Test Week        Genotype        \n Length:2424        Min.   :16.60   Min.   : 1.000   Length:2424       \n Class :character   1st Qu.:20.07   1st Qu.: 3.000   Class :character  \n Mode  :character   Median :22.55   Median : 6.000   Mode  :character  \n                    Mean   :22.24   Mean   : 6.378                     \n                    3rd Qu.:24.50   3rd Qu.: 9.000                     \n                    Max.   :26.20   Max.   :12.000                     \n                    NA's   :1800    NA's   :456                        \n     Sex             Time Point        Glucose Reading\n Length:2424        Length:2424        Min.   :  5.0  \n Class :character   Class :character   1st Qu.: 68.0  \n Mode  :character   Mode  :character   Median :118.0  \n                                       Mean   :168.5  \n                                       3rd Qu.:172.0  \n                                       Max.   :750.0  \n                                       NA's   :1959   \n\n\n\n# Removing Mouse and nan data values that were created during ChatGPT analysis\nIPGTT_data &lt;- IPGTT_tidy_data_corrected %&gt;% filter(Mouse != \"Mouse\")\nIPGTT_data &lt;- IPGTT_data %&gt;% filter(Mouse != \"nan\")\n\n# Removing all rows where there are no body weight AND glucose readings\nIPGTT_data &lt;- IPGTT_data %&gt;% filter(!(is.na(BW) & is.na(`Glucose Reading`)))\n\n\n\n\n\nold_names &lt;- names(IPGTT_data)\n\nnew_names &lt;- c(\"mouse\", \"body_weight\", \"test_week\", \"genotype\", \"sex\", \"time_point\", \"glucose_reading\")\nnames(IPGTT_data) &lt;- new_names\n\n\n\n\n\nIPGTT_data &lt;- IPGTT_data %&gt;% mutate(mouse_id = paste(mouse, genotype, sep = \"-\"))\n\n\n\n\n\nIPGTT_data &lt;- IPGTT_data %&gt;% mutate(time_point = as.numeric(str_extract(time_point, \"\\\\d+\")))\n\n\n\n\n\nIPGTT_data$sex &lt;-  factor(IPGTT_data$sex)\nIPGTT_data$genotype &lt;- factor(IPGTT_data$genotype)\n\n# Checking to see if data type changed\nstr(IPGTT_data)\n\ntibble [624 × 8] (S3: tbl_df/tbl/data.frame)\n $ mouse          : chr [1:624] \"LP\" \"LP\" \"LP\" \"LP\" ...\n $ body_weight    : num [1:624] 21.5 23.8 24.6 22.8 25.4 24.8 25.3 25.5 25 25.8 ...\n $ test_week      : num [1:624] 1 2 3 4 5 6 7 8 9 10 ...\n $ genotype       : Factor w/ 3 levels \"Het-NOD\",\"KO-NOD\",..: 2 2 2 2 2 2 2 2 2 2 ...\n $ sex            : Factor w/ 1 level \"F\": 1 1 1 1 1 1 1 1 1 1 ...\n $ time_point     : num [1:624] 0 0 0 0 0 0 0 0 0 0 ...\n $ glucose_reading: num [1:624] 114 114 133 96 158 155 155 161 137 252 ...\n $ mouse_id       : chr [1:624] \"LP-KO-NOD\" \"LP-KO-NOD\" \"LP-KO-NOD\" \"LP-KO-NOD\" ...\n\n\n\n\n\n\nIPGTT_data &lt;- IPGTT_data %&gt;% relocate(mouse_id, .before = mouse)\nIPGTT_data &lt;- IPGTT_data %&gt;% relocate(body_weight, .before = glucose_reading)\nIPGTT_data &lt;- IPGTT_data %&gt;% relocate(genotype, .before = test_week)\nIPGTT_data &lt;- IPGTT_data %&gt;% relocate(sex, .before = test_week)\nIPGTT_data &lt;- IPGTT_data %&gt;% relocate(body_weight, .before = glucose_reading)\nIPGTT_data &lt;- IPGTT_data %&gt;% relocate(time_point, .before = body_weight)"
  },
  {
    "objectID": "index.html#ipgtt-data-visualizations",
    "href": "index.html#ipgtt-data-visualizations",
    "title": "IPGTT Data Cleaning and Analysis",
    "section": "IPGTT Data Visualizations",
    "text": "IPGTT Data Visualizations\n\n#IPGTT trajectories overlaid with within-genotype medians\n\n\nIPGTT_fil &lt;- IPGTT_data %&gt;% filter(!is.na(glucose_reading), test_week %in% 1:4)\n\nmedian_data &lt;- IPGTT_data %&gt;% filter(!is.na(glucose_reading), test_week %in% 1:4)  %&gt;% \n  group_by(time_point, genotype, test_week) %&gt;%\n  summarise(median_glucose_reading = median(glucose_reading, na.rm = TRUE))\n\nplot1 &lt;- ggplot(IPGTT_fil, aes(time_point, glucose_reading, color = genotype, group = mouse_id)) +\n  geom_line(alpha = 0.3) +\n  geom_line(data = median_data, aes(x = time_point, y = median_glucose_reading, color = genotype, group = genotype)) + \n  facet_wrap(~ test_week,  ncol = 4) +\n  theme_minimal() +\n  scale_x_continuous(breaks=seq(0,120, by=30)) +\n  scale_color_manual(values = okabe_ito_palette) +\n  labs(title = \"IPGTT trajectories overlaid with within-genotype medians\", x=\"Test time (min)\", y = \"Blood glucose (mg/dL)\",    subtitle = \"(First four weeks of data)\") +\n  theme(legend.position = \"bottom\", axis.text.x = element_text(angle = 90))\n\nggplotly(plot1)"
  },
  {
    "objectID": "index.html#data-dictionary",
    "href": "index.html#data-dictionary",
    "title": "IPGTT Data Cleaning and Analysis",
    "section": "",
    "text": "Name\nData Type\nDescription\nUnit of Measurement\n\n\n\n\nmouse_id\nchr\nUnique identifier for each mouse\nNA\n\n\nmouse\nchr\nIdentifier or name assigned to each mouse\nNA\n\n\ngenotype\nfactor\nGenetic constitution of each mouse (e.g., WT, Het, KO)\nNA\n\n\nsex\nfactor\nSex of the mouse (e.g., Male, Female)\nNA\n\n\ntest_week\nnum\nWeek number when the test was conducted\nweeks\n\n\ntime_point\nnum\nSpecific time point at which data was collected\nmin\n\n\nbody_weight\nnum\nBody weight of the mouse\ng\n\n\nglucose reading\nnum\nBlood glucose level of the mouse\nmg/dL\n\n\n\n\n\n\n# Reading excel database\nIPGTT_tidy_data_corrected &lt;- read_excel(\"C:/Users/dhana/Desktop/ISB/DataFrames/T1D/data/IPGTT_tidy_data_corrected.xlsx\")\nsummary(IPGTT_tidy_data_corrected)\n\n    Mouse                 BW          Test Week        Genotype        \n Length:2424        Min.   :16.60   Min.   : 1.000   Length:2424       \n Class :character   1st Qu.:20.07   1st Qu.: 3.000   Class :character  \n Mode  :character   Median :22.55   Median : 6.000   Mode  :character  \n                    Mean   :22.24   Mean   : 6.378                     \n                    3rd Qu.:24.50   3rd Qu.: 9.000                     \n                    Max.   :26.20   Max.   :12.000                     \n                    NA's   :1800    NA's   :456                        \n     Sex             Time Point        Glucose Reading\n Length:2424        Length:2424        Min.   :  5.0  \n Class :character   Class :character   1st Qu.: 68.0  \n Mode  :character   Mode  :character   Median :118.0  \n                                       Mean   :168.5  \n                                       3rd Qu.:172.0  \n                                       Max.   :750.0  \n                                       NA's   :1959   \n\n\n\n# Removing Mouse and nan data values that were created during ChatGPT analysis\nIPGTT_data &lt;- IPGTT_tidy_data_corrected %&gt;% filter(Mouse != \"Mouse\")\nIPGTT_data &lt;- IPGTT_data %&gt;% filter(Mouse != \"nan\")\n\n# Removing all rows where there are no body weight AND glucose readings\nIPGTT_data &lt;- IPGTT_data %&gt;% filter(!(is.na(BW) & is.na(`Glucose Reading`)))\n\n\n\n\n\nold_names &lt;- names(IPGTT_data)\n\nnew_names &lt;- c(\"mouse\", \"body_weight\", \"test_week\", \"genotype\", \"sex\", \"time_point\", \"glucose_reading\")\nnames(IPGTT_data) &lt;- new_names\n\n\n\n\n\nIPGTT_data &lt;- IPGTT_data %&gt;% mutate(mouse_id = paste(mouse, genotype, sep = \"-\"))\n\n\n\n\n\nIPGTT_data &lt;- IPGTT_data %&gt;% mutate(time_point = as.numeric(str_extract(time_point, \"\\\\d+\")))\n\n\n\n\n\nIPGTT_data$sex &lt;-  factor(IPGTT_data$sex)\nIPGTT_data$genotype &lt;- factor(IPGTT_data$genotype)\n\n# Checking to see if data type changed\nstr(IPGTT_data)\n\ntibble [624 × 8] (S3: tbl_df/tbl/data.frame)\n $ mouse          : chr [1:624] \"LP\" \"LP\" \"LP\" \"LP\" ...\n $ body_weight    : num [1:624] 21.5 23.8 24.6 22.8 25.4 24.8 25.3 25.5 25 25.8 ...\n $ test_week      : num [1:624] 1 2 3 4 5 6 7 8 9 10 ...\n $ genotype       : Factor w/ 3 levels \"Het-NOD\",\"KO-NOD\",..: 2 2 2 2 2 2 2 2 2 2 ...\n $ sex            : Factor w/ 1 level \"F\": 1 1 1 1 1 1 1 1 1 1 ...\n $ time_point     : num [1:624] 0 0 0 0 0 0 0 0 0 0 ...\n $ glucose_reading: num [1:624] 114 114 133 96 158 155 155 161 137 252 ...\n $ mouse_id       : chr [1:624] \"LP-KO-NOD\" \"LP-KO-NOD\" \"LP-KO-NOD\" \"LP-KO-NOD\" ...\n\n\n\n\n\n\nIPGTT_data &lt;- IPGTT_data %&gt;%\n  select(mouse_id, mouse, genotype, sex, test_week, time_point, body_weight, glucose_reading, everything())\n\n\n\n\n\n\n\n\n\n#IPGTT trajectories overlaid with within-genotype medians\n\n\nIPGTT_fil &lt;- IPGTT_data %&gt;% filter(!is.na(glucose_reading), test_week %in% 1:4)\n\nmedian_data &lt;- IPGTT_data %&gt;% filter(!is.na(glucose_reading), test_week %in% 1:4)  %&gt;% \n  group_by(time_point, genotype, test_week) %&gt;%\n  summarise(median_glucose_reading = median(glucose_reading, na.rm = TRUE))\n\nplot1 &lt;- ggplot(IPGTT_fil, aes(time_point, glucose_reading, color = genotype, group = mouse_id)) +\n  geom_line(alpha = 0.3) +\n  geom_line(data = median_data, aes(x = time_point, y = median_glucose_reading, color = genotype, group = genotype)) + \n  facet_wrap(~ test_week,  ncol = 4) +\n  theme_minimal() +\n  scale_x_continuous(breaks=seq(0,120, by=30)) +\n  scale_color_manual(values = okabe_ito_palette) +\n  labs(title = \"IPGTT trajectories overlaid with within-genotype medians\", x=\"Test time (min)\", y = \"Blood glucose (mg/dL)\",    subtitle = \"(First four weeks of data)\") +\n  theme(legend.position = \"bottom\", axis.text.x = element_text(angle = 90))\n\nggplotly(plot1)"
  }
]